// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//TODO Нужно добавить больше полей по типу материала и всякого такого
model Item {
  id          Int      @id @default(autoincrement())
  name        String
  size        Size[]   @default([S, XL, M, L])
  price       Float
  mainImage   String
  images      String[]
  description String
  Cart        Cart?    @relation(fields: [cartId], references: [id])
  cartId      Int?
}

//TODO Нужно понять как создавать пользователя без регистрации
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Cart          Cart?
  Role          Role      @default(USER)
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Cart {
  id      Int      @id @default(autoincrement())
  itemIDs String[]
  items   Item[]
  user    User     @relation(fields: [userId], references: [id])
  userId  String   @unique
}

enum Role {
  USER
  ADMIN
}

enum Size {
  S
  M
  L
  XL
}
